package cmd

import (
	"encoding/base64"
	"io/ioutil"
	"os"
	"path"
	"regexp"
	"strings"
	"text/template"

	"github.com/rs/zerolog/log"
	"github.com/spf13/cobra"
)

var botGenTemplate = template.Must(template.New("gen").Parse(`
// Code generated by tools botgen; DO NOT EDIT.
package lang

var (
{{- range .Languages }}
	{{ .Name }} = "{{ .B64 }}"
{{- end }}
)
`))

// botgenCmd represents the botgen command
var botgenCmd = &cobra.Command{
	Use:   "botgen",
	Short: "Generate code!",
	Run: func(cmd *cobra.Command, args []string) {
		infos, err := ioutil.ReadDir("../bot/i18n/")
		if err != nil {
			log.Fatal().Err(err).Msg("error listing out the bot i18n directory")
		}
		var (
			langs          = []map[string]string{}
			reLanguageFile = regexp.MustCompile(`^active\.([A-Za-z\-]+)\.toml$`)
		)
		for _, info := range infos {
			filename := info.Name()
			match := reLanguageFile.FindAllStringSubmatch(filename, -1)
			if match == nil {
				continue
			}
			path := path.Join("../bot/i18n/", filename)
			data, err := ioutil.ReadFile(path)
			if err != nil {
				log.Fatal().Err(err).Msg("error reading file")
			}
			log.Info().Msg(path)
			b64data := base64.StdEncoding.EncodeToString(data)
			varName := strings.ReplaceAll(match[0][1], "-", "")
			langs = append(langs, map[string]string{
				"Name": varName,
				"B64":  b64data,
			})
		}
		outFile, err := os.OpenFile("../bot/discord/lang/gen.go", os.O_CREATE|os.O_WRONLY|os.O_TRUNC, 0644)
		defer outFile.Close()
		if err != nil {
			log.Fatal().Err(err).Msg("error opening destination file")
		}
		err = botGenTemplate.Execute(outFile, map[string]interface{}{
			"Languages": langs,
		})
		if err != nil {
			log.Fatal().Err(err).Msg("error executing template")
		}
	},
}

func init() {
	rootCmd.AddCommand(botgenCmd)

	// Here you will define your flags and configuration settings.

	// Cobra supports Persistent Flags which will work for this command
	// and all subcommands, e.g.:
	// botgenCmd.PersistentFlags().String("foo", "", "A help for foo")

	// Cobra supports local flags which will only run when this command
	// is called directly, e.g.:
	// botgenCmd.Flags().BoolP("toggle", "t", false, "Help message for toggle")
}
